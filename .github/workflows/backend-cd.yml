name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: kaiyicode
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
            {"text":"Deployment started :progress_bar:"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}$

      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set builder number
        id: builder-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
            {"text":":maven: Building with Maven"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}$

      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -D docker.image.tag=${{ steps.builder-number.outputs.BUILD_NUMBER }} jib:build

      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
            {"text":":docker: Image tag:${{ steps.builder-number.outputs.BUILD_NUMBER }} pushed to https://hub.docker.com/repository/docker/kaiyicode1/kaiyicode-api"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}$

      - name: Update Dockrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(kaiyicode1/kaiyicode-api:)([^"]*)_\1'${{ steps.builder-number.outputs.BUILD_NUMBER }}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json

      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
            {"text":":aws: Starting deployment to Elastic Beanstalk"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}$

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.builder-number.outputs.BUILD_NUMBER }}
          version_description: ${{github.SHA}}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json

      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
            {"text":":githubloading: Committing to repo https://github.com/kaiyicode/spring-boot-fullstack"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}$

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.builder-number.outputs.BUILD_NUMBER }}"
          git remote set-url origin https://kaiyicode:${{ secrets.GH_PAT }}@github.com/kaiyicode/spring-boot-fullstack.git
          git push

      - name: Send Slack Message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
            {"text":"Deployment and commit completed :github_check_mark: :party_blob: - ${{ secrets.EB_ENVIRONMENT_URL }}"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Message
        if: always()
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '
            {"text":"Job Status ${{ job.status }}"}
          ' 
          ${{ secrets.SLACK_WEBHOOK_URL }}$